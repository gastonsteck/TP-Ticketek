

TAD TICKETEK


datos:
	Diccionario(email, Usuario) usuarios 
	Diccionario(codigo, Espectaculo) espectaculos
	Diccionario(nombre, Sede) sedes

operaciones:
	Ticketek(): crea el sistema
	registrarEstadio(nombre, capacidad, direccion): crea un nuevo estadio
	registrarTeatro(nombre, capacidad, direccion, cantFilas, asientosPorFila): crea un nuevo teatro
	registrarMiniestadio(nombre, capacidad, direccion, cantFilas, asientosPorFila, cantPuestosMerch, cantPuestosComida, valorFijo): crea un nuevo miniestadio
	registrarUsuario(email, nombreCompleto, contraseña): crea un nuevo usuario
	registrarEspectaculo(nombre, codigo, Lista sedes, Lista fechas): crea un nuevo espectaculo
	venderEntrada(email, codigoEspectaculo, sede, Lista asientos, sector, contraseña): vende una entrada a un cliente
	listarSedesParaEspectaculo(codigo): devuelve la lista de sedes donde se realizará el espectaculo con su información
	listarEntradas(email): devuelve la lista de entradas compradas por el usuario
	listarEntradasFuturas(email): devuelve la lista de entradas futuras compradas por un usuario
	anularEntrada(email, contraseña, codigoEntrada): anula una entrada indicando el nombre de usuario, el código de la entrada y la contraseña
	cambiarSede(sede, codigoEntrada)
	calcularCostoEntrada(email, contraseña, codigoEntrada): calcula el costo de una entrada autenticando al usuario
	consultarValorEntrada(codigoEspectaculo, nombreSede, sector): consulta el valor de una entrada a un espectáculo
	calcularTotalRecaudado(codigoEspectaculo): calcula el total recaudado para un espectáculo

	//auxiliares:
	verificarDisponibilidad(sede, fecha): verifica que no haya ningún espectáculo programado en esa sede en dicha fecha
	seleccionarNuevoAsiento(asiento): permite seleccionar otro asiento en el mismo sector (si se hace el cambio de sede y el asiento está ocupado)
TAD USUARIO

datos:
	email
	nombreCompleto
	contraseña
	Diccionario (codigoEntrada, Entrada) entradas
operaciones:
	Usuario(email, nombreCompleto, contraseña): constructor
	obtenerEntrada(codigoEspectaculo, sede, sector, cantidad): genera una entrada en la lista de entradas
	verificarConstraseña(contraseña): verifica que la contraseña pasada por parámetro sea correcta
	listarEntradas(): devuelve la lista de entradas compradas por el usuario
	listarEntradasFuturas(): devuelve la lista de entradas futuras compradas por el usuario
	reembolsarEntrada(codigoEntrada): anula una entrada

TAD ESPECTACULO
datos:
	nombre
	codigo
	Lista sedes
	Lista fechas
	Diccionario (nombreSede, Funcion) funciones
	totalRecaudado
operaciones:
	Espectaculo(nombre, codigo, Lista sedes, Lista fechas): constructor
	sumarRecaudado(cantidad): suma la cantidad pasada por parámetro al total
	restarRecaudado(cantidad): resta la cantidad pasada por parámetro al total
	obtenerInformacionSedes(): devuelve un diccionario con información completa de todas las sedes y sus funciones


TAD SEDE (clase base)
datos:
	nombre
	tipo
	capacidad
	direccion
operaciones:
	Sede(nombre, tipo, capacidad, direccion): constructor
	calcularPrecioEntrada(precioBase, sector): calcula el precio de la entrada
	obtenerInformacionCompleta(): metodo abstracto

TAD ESTADIO extiende SEDE
datos:
  	// tiene todos los datos de Sede
operaciones:
  	Estadio(nombre, capacidad, direccion): constructor
  	calcularPrecioEntrada(precioBase, sector): calcula el precio de la entrada
	obtenerInformacionCompleta(): metodo abstracto

TAD TEATRO extiende SEDE
datos:
	cantFilas
	asientosPorFila
operaciones:
	Teatro(nombre, capacidad, direccion, cantFilas, asientosPorFila): constructor
	calcularPrecioEntrada(precioBase, sector): calcula el precio de la entrada
	obtenerInformacionCompleta(): metodo abstracto

TAD MINIESTADIO extiende SEDE
datos:
	cantFilas
	asientosPorFila
	cantPuestosMerch
	cantPuestosComida
	valorFijo
operaciones:
	Miniestadio(nombre, capacidad, direccion, cantFilas, asientosPorFila, cantPuestosMerch, cantPuestosComida, valorFijo): constructor
	calcularPrecioEntrada(precioBase, sector): calcula el precio de la entrada
	obtenerInformacionCompleta(): metodo abstracto


TAD FUNCIÓN
datos:
	sede
	fecha
	precioBase
	Diccionario(sector, Lista asientos) disponibles 
	
operaciones:
	Funcion(sede, fecha, precioBase, asientosTotalesPorSector): constructor
	venderAsiento(sector, numAsiento): elimina el asiento de la lista de asientos disponibles en el sector
	sumarAsiento(sector, numAsiento): restablece la disponibilidad de un asiento (tras un reembolso)
	verificarDisponibilidad(sector, asiento): verifica que el asiento pasado por parámetro esté disponible
	devolverPrecio(): devuelve el precio base de la funcion

TAD ENTRADA
datos:
	codigoEntrada
	codigoEspectaculo
	nombreEspectaculo
	nombreSede
	fecha
	sector
	numAsiento
	valorFinal
operaciones:
	Entrada(codigoEntrada, codigoEspectaculo, nombreEspectaculo, nombreSede, fecha, sector, ubicacion, valorFinal): constructor
	devolverValor(): devuelve el valor final
	esFutura(fecha): devuelve si la fecha es futura
	cambiarSede(sede, fecha): cambia la sede de la entrada 
	cambiarSede(sede, fecha, numAsiento): cambia la sede de la entrada y tambien su asiento si el asiento esta ocupado
	devolverEspectaculo(): devuelve el código del espectáculo
	devolverSede(): devuelve el nombre de la sede
	devolverSector(): devuelve el sector
	devolverAsiento(): devuelve el numero del aiento
TAD FECHA
datos:
	dia
	mes
	anio
operaciones:
	Fecha(dia, mes, anio): constructor
	esFutura(): devuelve si la fecha es futura